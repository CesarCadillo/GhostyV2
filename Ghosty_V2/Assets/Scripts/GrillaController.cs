using System.Collections;
using Unity.AI.Navigation;
using UnityEngine;
using UnityEngine.AI;

public class GrillaController : MonoBehaviour
{
    [SerializeField] GameObject terrainblock;
    [SerializeField] GameObject[] cubePrefab;
    [SerializeField] GameObject[] HazardBlockPrefab;
    [SerializeField] GameObject heartblock;
    [SerializeField] GameObject[] cauldronBlock;
    [SerializeField] GameObject EnemyBlockPrefab;
    [SerializeField] GameObject PowerBlockPrefab;
    [SerializeField] NavMeshSurface walkableArea;

    [SerializeField] int a;
    [SerializeField] int b;
    [SerializeField] int gridSize = 10;
    [SerializeField] float delay = 0.5f;
    [SerializeField] int[][,] arrayGridMatrix;

    void Start()
    {
        
        int[,] matrix1 =
            {{0,0,5,0,0,0,0,1,3,0},
            {0,1,3,8,8,1,4,3,0,5},
            {3,1,0,3,1,0,0,3,0,3},
            {1,3,0,0,1,3,0,7,1,6},
            {1,0,0,3,1,1,3,2,1,0},
            {0,8,1,3,1,1,3,1,0,1},
            {1,8,8,0,3,1,0,7,7,4},
            {4,0,8,0,0,7,1,0,7,3},
            {0,0,1,6,1,2,1,3,1,0},
            {0,5,3,0,0,0,0,5,0,0}};



        int[,] matrix2 =
            {{5,1,0,1,3,3,1,0,1,5},
            {0,3,4,7,7,7,7,6,3,0},
            {0,1,0,7,0,0,7,0,1,0},
            {0,1,3,1,3,1,3,1,3,0},
            {0,3,0,3,1,1,1,0,1,0},
            {0,1,0,1,1,1,3,0,3,0},
            {0,3,1,3,1,3,1,3,1,0},
            {0,1,0,8,0,0,8,0,1,0},
            {0,3,6,8,8,8,8,4,3,0},
            {5,1,0,1,3,3,1,0,1,5} };



        int[,] matrix3 =
            {{0,3,1,5,1,3,1,3,1,0},
            {0,0,1,1,0,3,7,1,6,0},
            {0,0,3,1,0,1,7,2,1,0},
            {8,8,0,3,0,1,3,7,7,0},
            {4,8,8,1,1,1,0,0,7,7},
            {8,8,0,0,1,1,1,7,7,4},
            {0,8,8,3,1,0,3,0,7,7},
            {0,1,2,8,1,0,1,3,0,0},
            {0,6,1,8,3,0,1,1,0,0},
            {0,1,3,1,3,1,5,1,3,0}};



        int[,] matrix4 =
           {{4,1,1,1,5,5,1,1,1,6},
            {7,7,1,0,1,1,0,1,8,8},
            {0,7,7,7,1,1,8,8,8,8},
            {1,7,0,2,1,1,3,0,8,1},
            {4,7,7,3,1,1,1,8,8,3},
            {3,7,7,1,1,1,3,8,8,6},
            {1,7,0,3,1,1,2,0,8,1},
            {0,0,0,0,1,1,0,0,0,0},
            {0,8,8,8,1,1,7,7,7,0},
            {6,8,1,1,5,5,1,1,7,4}};



        int[,] matrix5 =
           {{1,3,1,0,0,8,8,1,5,0},
            {0,6,8,8,0,8,4,8,3,0},
            {0,3,0,8,8,8,8,0,0,0},
            {0,1,0,0,8,1,2,0,0,0},
            {0,3,0,0,1,1,3,1,3,0},
            {0,3,1,3,1,1,0,0,3,0},
            {0,0,0,2,1,7,0,0,1,0},
            {0,1,0,7,7,7,7,0,3,0},
            {0,3,7,4,7,0,7,7,6,0},
            {0,5,1,7,7,0,0,1,3,1}};



        int[,] matrix6 =
           {{5,1,0,1,0,0,0,0,5,0},
            {0,1,0,3,7,7,7,3,1,0},
            {0,2,0,1,0,0,3,6,3,0},
            {0,3,3,1,1,0,0,7,0,0},
            {8,8,8,0,1,1,7,7,0,4},
            {4,0,8,8,1,1,0,7,7,7},
            {0,0,8,0,0,1,1,3,3,0},
            {0,3,6,3,0,0,1,0,2,0},
            {0,1,3,7,7,7,3,0,1,0},
            {0,5,0,0,0,0,1,0,1,5}};



        int[,] matrix7 =
           {{0,4,1,3,1,1,3,7,7,0},
            {5,1,0,7,0,0,7,0,7,6},
            {1,3,7,7,1,1,7,7,3,1},
            {1,0,7,0,3,1,0,7,0,3},
            {4,0,1,3,1,1,0,1,0,1},
            {1,0,1,0,1,1,3,1,0,4},
            {3,0,8,0,1,3,0,8,0,1},
            {1,3,8,8,1,1,8,8,3,1},
            {6,8,0,8,0,0,8,0,1,5},
            {0,8,8,3,1,1,3,1,4,0}};



        int[,] matrix8 =
           {{5,1,0,7,7,7,7,0,1,5},
            {1,3,1,3,0,0,7,7,3,1},
            {0,1,2,1,0,0,7,4,7,0},
            {0,3,1,3,1,3,1,7,7,0},
            {3,0,0,1,1,1,3,0,0,6},
            {6,0,0,3,1,1,1,0,0,3},
            {0,8,8,1,3,1,3,1,3,0},
            {0,8,4,8,0,0,1,2,1,0},
            {1,3,8,8,0,0,3,1,3,1},
            {5,1,0,8,8,8,8,0,1,5}};



        int[,] matrix9 =
           {{1,6,7,7,7,7,7,7,6,1},
            {1,0,0,0,7,7,0,0,0,1},
            {5,3,2,1,7,7,1,2,3,5},
            {0,1,0,3,1,1,3,0,1,0},
            {4,1,0,1,1,1,1,0,1,4},
            {1,1,3,1,1,1,1,3,1,1},
            {0,0,0,3,1,1,3,0,0,0},
            {0,0,0,0,8,8,0,0,0,0},
            {1,3,6,1,8,8,1,6,3,1},
            {5,1,1,0,0,0,0,1,1,5}};



        int[,] matrix10 =
           {{1,3,7,3,0,0,0,1,1,5},
            {1,8,4,8,0,0,1,6,3,0},
            {1,8,8,8,0,0,0,3,7,0},
            {3,0,8,3,1,0,0,7,7,0},
            {3,0,0,0,1,1,7,7,7,1},
            {1,8,8,8,1,1,0,0,0,3},
            {0,8,8,0,0,1,3,7,0,3},
            {0,8,3,0,0,0,7,7,7,1},
            {0,3,6,1,0,0,7,4,7,1},
            {5,1,1,0,0,0,3,7,3,1}};



        int[,] matrix11 =
           {{1,1,1,0,0,0,1,1,1,1},
            {1,5,0,0,0,0,1,7,1,0},
            {0,4,7,0,0,0,0,1,7,0},
            {0,0,7,7,0,3,1,1,0,0},
            {0,0,0,1,1,1,0,3,2,0},
            {0,0,0,0,1,1,0,0,1,1},
            {0,0,0,1,8,1,0,1,8,8},
            {0,1,8,8,8,0,0,1,6,1},
            {1,5,3,0,0,0,4,3,1,0},
            {0,1,0,0,0,1,1,1,0,0}};



        int[,] matrix12 =
           {{0,7,1,3,1,3,1,0,0,5},
            {1,4,0,1,1,3,7,7,7,1},
            {0,1,0,0,3,1,0,1,1,1},
            {0,1,3,1,0,0,0,0,6,0},
            {0,0,0,3,1,1,0,1,7,0},
            {4,1,0,0,1,1,0,1,7,1},
            {0,1,3,2,1,0,0,0,1,1},
            {1,1,0,1,0,1,6,1,3,0},
            {0,5,8,8,0,1,3,1,1,0},
            {0,0,0,8,1,1,0,0,0,0}};



        int[,] matrix13 =
           {{5,1,0,0,1,0,0,1,1,1},
            {3,1,7,7,1,1,0,0,4,1},
            {0,1,0,0,6,0,0,0,1,0},
            {0,0,0,0,7,7,0,0,1,0},
            {0,1,0,3,1,1,3,1,1,1},
            {1,1,1,3,1,1,3,0,1,0},
            {0,8,0,0,1,8,0,0,0,0},
            {0,1,0,0,0,6,0,0,0,1},
            {0,4,1,0,1,8,1,8,3,1},
            {5,1,1,0,0,1,0,0,1,5}};



        int[,] matrix14 =
           {{0,0,0,0,1,0,0,1,1,5},
            {0,0,0,4,1,8,1,8,8,1},
            {0,3,7,1,0,0,3,6,0,0},
            {0,1,7,0,0,0,0,0,0,0},
            {0,3,1,1,1,1,1,3,0,0},
            {0,0,7,1,1,1,1,1,1,0},
            {1,7,0,0,0,0,0,0,8,1},
            {1,6,3,1,1,0,7,4,8,1},
            {0,1,1,7,1,7,1,0,0,0},
            {0,0,5,0,0,0,0,0,0,0}};



        int[,] matrix15 =
           {{5,1,1,0,1,8,1,6,0,0},
            {1,1,0,0,0,3,8,8,3,0},
            {4,0,0,0,3,1,8,8,1,1},
            {1,0,0,0,1,0,1,1,1,1},
            {1,7,0,0,1,1,0,1,3,1},
            {1,1,7,3,1,1,1,1,0,1},
            {0,0,7,7,7,0,0,0,0,4},
            {0,1,1,6,7,0,0,0,0,1},
            {0,1,1,0,1,3,0,0,1,1},
            {0,0,0,0,1,1,3,1,1,5}};



        int[,] matrix16 = 
            {{0,0,0,0,5,5,0,0,0,0},
            {0,5,8,8,1,1,7,7,5,0},
            {0,2,8,4,1,1,4,7,2,0},
            {8,6,8,3,1,1,3,7,6,7},
            {8,8,0,0,1,1,0,0,7,7},
            {8,0,8,0,1,1,0,7,0,7},
            {3,6,0,3,1,1,3,0,6,3},
            {0,1,0,4,1,1,4,0,1,0},
            {0,5,0,0,1,1,0,0,5,0},
            {0,0,0,0,5,5,0,0,0,0}};



        int[,] matrix17 =
            {{0,2,1,0,0,8,8,0,1,0},
            {0,5,1,1,0,8,8,8,2,5},
            {0,3,8,1,1,8,0,0,8,1},
            {0,4,8,8,3,8,1,0,6,3},
            {0,0,0,0,1,1,1,0,0,0},
            {7,0,0,1,1,1,0,0,0,0},
            {3,6,0,1,7,3,7,7,4,0},
            {1,7,0,0,7,1,1,7,3,0},
            {5,2,7,7,7,0,1,1,5,0},
            {0,1,0,7,7,0,0,1,2,0}};



        int[,] matrix18 = 
            {{8,8,8,8,8,8,8,3,1,0},
            {6,0,1,3,0,8,8,0,1,5},
            {0,0,4,8,8,8,8,4,3,1},
            {0,0,0,0,1,1,0,0,0,3},
            {5,3,1,1,1,1,3,2,1,5},
            {5,1,2,3,1,1,1,1,3,5},
            {0,0,0,0,1,1,0,0,0,0},
            {1,3,4,7,7,7,7,4,0,0},
            {5,1,0,7,7,0,3,1,0,6},
            {0,1,3,7,7,7,7,7,7,7}};



        int[,] matrix19 = 
            {{0,0,0,0,5,5,0,0,0,0},
            {0,5,7,7,1,1,8,8,5,0},
            {0,2,7,4,1,1,4,8,2,0},
            {7,6,7,3,1,1,3,8,6,8},
            {7,7,0,0,1,1,0,0,8,8},
            {7,0,7,0,1,1,0,8,0,8},
            {3,6,0,3,1,1,3,0,6,3},
            {0,1,0,4,1,1,4,0,1,0},
            {0,5,0,0,1,1,0,0,5,0},
            {0,0,0,0,5,5,0,0,0,0}};



        int[,] matrix20 = 
            {{0,2,1,0,0,8,8,0,1,0},
            {0,5,1,1,0,8,8,8,2,5},
            {0,3,8,1,1,8,0,0,8,1},
            {0,4,8,8,3,8,1,0,6,3},
            {0,0,0,0,1,1,1,0,0,0},
            {8,0,0,1,1,1,0,0,0,0},
            {3,6,0,1,7,3,7,7,4,0},
            {1,7,0,0,7,1,1,7,3,0},
            {5,2,7,7,7,0,1,1,5,0},
            {0,1,0,7,7,0,0,1,2,0}};

            

        a = Random.Range(0, HazardBlockPrefab.Length);
        if (a == 1)
        {
            b = 0;
        }
        else if(a==0)
        {
            b = 1;
        }
        
        arrayGridMatrix = new int[][,] { matrix1, matrix2, matrix3, matrix4, matrix5, matrix6, matrix7, matrix8, matrix9, matrix10, matrix11, matrix12, matrix13, matrix14, matrix15, matrix16, matrix17, matrix18, matrix19, matrix20};
        int randomIndex = Random.Range(0, arrayGridMatrix.Length);
        StartCoroutine(SpawnCubes(arrayGridMatrix[randomIndex]));
        Debug.Log(randomIndex);
    }

    IEnumerator SpawnCubes(int[,] gridMatrix)
    {
        for (int y = 0; y < gridSize; y++)
        {
            for (int x = 0; x < gridSize; x++)
            {
                int blockType = gridMatrix[y, x];
                Vector3 spawnPosition = new Vector3(x, 0, y) * 10;

                if (blockType == 1) 
                {
                    Instantiate(terrainblock, spawnPosition, Quaternion.identity);
                }                
                else if (blockType == 2)
                {
                    Instantiate(cauldronBlock[Random.Range(0, cauldronBlock.Length)], spawnPosition, Quaternion.identity);
                }
                else if (blockType == 3)
                {
                    Instantiate(cubePrefab[Random.Range(0, cubePrefab.Length)], spawnPosition, Quaternion.identity);
                }
                else if (blockType == 4)
                {
                    Instantiate(heartblock, spawnPosition, Quaternion.identity);
                }
                else if (blockType == 5)
                {
                    Instantiate(EnemyBlockPrefab, spawnPosition, Quaternion.identity);
                }
                else if (blockType == 6)
                {
                    Instantiate(PowerBlockPrefab, spawnPosition, Quaternion.identity);
                }
                else if (blockType == 7)
                {
                    Instantiate(HazardBlockPrefab[a], spawnPosition, Quaternion.identity);
                }
                else if (blockType == 8)
                {
                    Instantiate(HazardBlockPrefab[b], spawnPosition, Quaternion.identity);
                }

                yield return new WaitForSeconds(delay);

            }
        }
        new WaitForSeconds(delay);        
        walkableArea.BuildNavMesh();

    }
}



